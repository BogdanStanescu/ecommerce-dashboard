datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Store {
  id         String      @id @default(uuid())
  name       String
  user_id    String
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  billboards Billboard[]
  categories Category[]
  products   Product[]
  colors     Color[]
  sizes      Size[]

  @@map("stores")
}

model Billboard {
  id         String     @id @default(uuid())
  label      String
  image_url  String
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  store_id   String
  store      Store      @relation(fields: [store_id], references: [id])
  categories Category[]

  @@index([store_id])
  @@map("billboards")
}

model Category {
  id           String    @id @default(uuid())
  name         String
  store        Store     @relation(fields: [store_id], references: [id])
  store_id     String
  billboard    Billboard @relation(fields: [billboard_id], references: [id])
  billboard_id String
  products     Product[]
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt

  @@index([store_id])
  @@index([billboard_id])
  @@map("categories")
}

model Size {
  id         String    @id @default(uuid())
  name       String
  value      String
  store      Store     @relation(fields: [store_id], references: [id])
  store_id   String
  products   Product[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt

  @@index([store_id])
  @@map("sizes")
}

model Color {
  id         String    @id @default(uuid())
  name       String
  value      String
  store      Store     @relation(fields: [store_id], references: [id])
  store_id   String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  products   Product[]

  @@index([store_id])
  @@map("colors")
}

model Product {
  id          String   @id @default(uuid())
  name        String
  price       Int
  is_featured Boolean  @default(false)
  is_archived Boolean  @default(false)
  store       Store    @relation(fields: [store_id], references: [id])
  store_id    String
  category    Category @relation(fields: [category_id], references: [id])
  category_id String
  size        Size     @relation(fields: [size_id], references: [id])
  size_id     String
  color       Color    @relation(fields: [color_id], references: [id])
  color_id    String
  images      Image[]
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@index([size_id])
  @@index([color_id])
  @@index([store_id])
  @@index([category_id])
  @@map("products")
}

model Image {
  id         String   @id @default(uuid())
  product    Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id String
  url        String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([product_id])
  @@map("images")
}
